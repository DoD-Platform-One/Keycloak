# -- The base domain for all Big Bang components.
# Keycloak will be available at keycloak.%domain%
domain: dev.bigbang.mil
istio:
  # -- Enable or disable Istio
  enabled: false
  hardened:
    # -- Enable or disable istio's hardened mode
    enabled: false
    # -- Custom authorization policies to be applied to the keycloak namespace
    customAuthorizationPolicies:
      []
      # - name: "allow-nothing"
      #   enabled: true
      #   spec: {}
    # -- Specify the Istio outbound traffic policy mode
    outboundTrafficPolicyMode: "REGISTRY_ONLY"
    # -- Custom service entries to be applied to the keycloak namespace
    customServiceEntries:
      []
      # - name: "allow-google"
      #   enabled: true
      #   spec:
      #     exportTo:
      #       - "."
      #     hosts:
      #       - google.com
      #     location: MESH_EXTERNAL
      #     ports:
      #       - number: 443
      #         protocol: TLS
      #         name: https
      #     resolution: DNS
  mtls:
    # -- Configure the default mTLS mode for keycloak's namespace
    # -- STRICT = Allow only mutual TLS traffic,
    # -- PERMISSIVE = Allow both plain text and mutual TLS traffic
    mode: STRICT
  keycloak:
    # -- Enable or disable the istio virtual service for keycloak
    enabled: false
    # -- Additional annotations to be added to the istio virtual service
    annotations: {}
    # -- Additional labels to be added to the istio virtual service
    labels: {}
    # -- Specify the istio gateways to be used for keycloak
    gateways:
      - istio-gateway/passthrough-ingressgateway
    # -- Specify the hostnames from which keycloak will be accessible
    hosts:
      - keycloak.{{ .Values.domain }}

networkPolicies:
  # -- Enable or disable the bundled network policies
  enabled: false
  # -- Configure external services that keycloak needs to access
  externalServices: {}
  # externalServices:
  #   database:
  #     cidrs:
  #       - 10.0.8.0/24
  #       - 10.0.9.0/24
  #     ports:
  #       - protocol: TCP
  #         port: 5432
  #   ldap:
  #     cidrs:
  #       - 10.0.10.0/24
  #       - 10.0.11.0/24
  #     ports:
  #       - protocol: TCP
  #         port: 636
  #   smtp:
  #     cidrs:
  #       - 10.0.12.0/24
  #       - 10.0.13.0/24
  #     ports:
  #       - protocol: TCP
  #         port: 587
  # -- Configures labelSelectors for network policies allowing ingress from istio gateways
  ingressLabels:
    app: istio-ingressgateway
    istio: ingressgateway
  # -- Configures additional network policies beyond the ones bundled with the chart
  additionalPolicies: []

bbtests:
  # -- Enables the Big Bang test hooks
  enabled: false
  image: "registry1.dso.mil/ironbank/big-bang/base:2.1.0"
  cypress:
    artifacts: true
    envs:
      cypress_url: "http://keycloak-keycloak-http.keycloak.svc.cluster.local"
      cypress_username: "admin"
      cypress_password: "password"
      cypress_tnr_username: "cypress"
      cypress_tnr_password: "tnr_w!G33ZyAt@C8"
      tnr_username: "cypress"
      tnr_password: "tnr_w!G33ZyAt@C8"
      tnr_firstName: "Cypress"
      tnr_lastName: "TNR"
      tnr_email: "cypress@tnr.mil"

upstream:
  fullnameOverride: "keycloak-keycloak"
  nameOverride: "keycloak"

  podAnnotations:
    traffic.sidecar.istio.io/excludeInboundPorts: "9000"
    proxy.istio.io/config: |
      proxyMetadata:
        ISTIO_META_DNS_CAPTURE: "true"
  replicas: 1
  image:
    # -- The Keycloak image repository
    repository: registry1.dso.mil/ironbank/opensource/keycloak/keycloak
    # Overrides the Keycloak image tag whose default is the chart appVersion
    tag: "26.1.4"

  # -- SecurityContext for the entire Pod. Every container running in the Pod will inherit this SecurityContext. This might be relevant when other components of the environment inject additional containers into running Pods (service meshes are the most prominent example for this)
  podSecurityContext:
    fsGroup: 2000
    runAsUser: 2000
    runAsGroup: 2000
    runAsNonRoot: true

  # -- SecurityContext for the Keycloak container
  securityContext:
    runAsUser: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL

  # -- Overrides the default args for the Keycloak container
  # **arg: "start" needs to be set for the container to start up properly**
  args:
    - "start"

  # -- Additional environment variables for Keycloak mapped from Secret or ConfigMap
  extraEnvFrom: |
    - secretRef:
        name: '{{ include "keycloak.fullname" . }}-env'

  # -- Pod resource requests and limits
  resources:
    requests:
      cpu: "1"
      memory: "1Gi"
    limits:
      memory: "1Gi"

  # -- Configuration for secrets that should be created
  # The secrets can also be independently created separate from this helm chart.
  # for example with a gitops tool like flux with a kustomize overlay.
  # NOTE: Secret values can be templated
  secrets:
    # -- Environmental variables
    env:
      stringData:
        # -- https://access.redhat.com/documentation/en-us/openjdk/11/html-single/configuring_openjdk_11_on_rhel_with_fips/index
        JAVA_TOOL_OPTIONS: "-Dcom.redhat.fips=false"
        # -- default admin credentials. Override them for production deployments
        KEYCLOAK_ADMIN: "admin"
        KEYCLOAK_ADMIN_PASSWORD: "password"
        # -- java opts for jgroups required for infinispan distributed cache when using the kubernetes stack.
        # -- https://www.keycloak.org/server/caching
        JAVA_OPTS_APPEND: -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless
        KC_HOSTNAME: "keycloak.dev.bigbang.mil"

  dbchecker:
    # -- If `true`, the dbchecker init container is enabled; this is incompatible with Big Bang
    # and so is disabled by default.
    enabled: false
  # -- Configures the database connection; can be configured here and/or via environment variables with `upstream.secrets.env`
  database:
    vendor: postgres
    # -- NOTE: If you change fullnameOverride to something else,
    # -- you will need to change the hostname to match : %fullnameOverride%-postgresql
    hostname: keycloak-keycloak-postgresql
    port: 5432
    database: keycloak
    username: keycloak
    password: keycloak

postgresql:
  # -- If `true`, the Postgresql dependency is enabled
  enabled: true
  image:
    registry: registry1.dso.mil
    repository: ironbank/bitnami/postgres
    tag: 17.4.0
  global:
    security:
      # -- Allow registry1.dso.mil in lieu of the default bitnami registry
      allowInsecureImages: true
    postgresql:
      auth:
        # -- PostgreSQL User to create
        username: keycloak
        # -- PostgreSQL Password for the new user
        password: keycloak
        # -- PostgreSQL Database to create
        database: keycloak
